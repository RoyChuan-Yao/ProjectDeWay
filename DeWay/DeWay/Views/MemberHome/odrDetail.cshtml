@model IEnumerable<DeWay.Models.Cart_OrderDetail>

@{
    ViewBag.Title = "odrDetail";
    decimal total = 0;
    double Total = 0;
    double shipping = 0;
    Layout = "~/Views/Shared/_Layout_Member.cshtml";
}


<div class="">
    <div class=" row ml-1 mr-1 justify-content-between mb-2">
        <div>
            <a href="@Url.Action("Index","Market",new { sellerID=Model.FirstOrDefault().Order.selID})"> @Html.DisplayFor(model => model.FirstOrDefault().Specification.Product.Seller.selCompany)</a>
        </div>
        <div>
            @Html.DisplayFor(model => model.FirstOrDefault().Order.odrDate)
        </div>

    </div>

    <span class="d-bg text-white border-radius ">　@Html.DisplayFor(model => model.FirstOrDefault().Order.OrderStatus.odrStatus)　</span>



    @{
        if (Model.FirstOrDefault().Order.odrStatusID == "ods0000006" && Enumerable.Count(ViewBag.refund) == 0)
        {
            @Html.ActionLink("我要退貨", "rfdCreate", new { odrID = Model.FirstOrDefault().odrID })
        }

    }
    <br />
    <div class="mt-3">

        @Html.Action("_rvwIndex", new { code = 2, odr = Model.FirstOrDefault().odrID })
    </div>


    <br />

    <div class="card">
        <div class="card-header">
            <h5>訂單內容</h5>
        </div>
        <div class="card-body">
            <div class="row font-weight-bold mb-3">
                <div class="col-3">商品</div>
                <div class="col-3">規格</div>
                <div class="col-3">數量</div>
                <div class="col-3">小計</div>

            </div>
            @foreach (var item in Model)
            {
                var subtotal = (decimal)((int)item.pdtPrice * item.Discount * item.Quantity);
                subtotal=Math.Round(subtotal);
                total += subtotal;
                shipping = Math.Round((double)item.Order.shpPrice);
                <div class="row align-items-baseline">
                    <div class="col-3">
                        <a href="@Url.Action("ProductPage","Productpage",new { pdtID=item.Specification.pdtID})">
                            <img src="~/productImage/@item.Specification.Product.ProductImage.FirstOrDefault().pdtImage" class="img-responsive img-rounded img-adjust" />
                        </a>
                        @Html.DisplayFor(modelItem => item.Specification.Product.pdtName)
                    </div>
                    <div class="col-3 ">
                        @Html.DisplayFor(modelItem => item.Specification.Style)
                        @Html.DisplayFor(modelItem => item.Specification.Size)
                    </div>
                    <div class="col-3">
                        ×@Html.DisplayFor(modelItem => item.Quantity)
                    </div>
                    <div class="col3">
                        NT$ @subtotal
                    </div>
                </div>


                <br />

            }
            <hr />
            @{
                Total = Math.Round((double)(total + (decimal)shipping));

            }

            <div>
                <p class="text-right">運費： @shipping </p>
                <p class="text-right">總計： @Total</p>
            </div>
        </div>
    </div>
    <br />
    <div class="card">
        <div class="card-header">
            <h5>收件人資訊</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <p class="col-5 text-right">收件人</p>
                <p class="col-7"> @Html.DisplayFor(model => model.FirstOrDefault().Order.recName)</p>
            </div>
            <div class="row">
                <p class="col-5 text-right">地址</p>
                <p class="col-7">
                    @Html.DisplayFor(model => model.FirstOrDefault().Order.recCity)
                    @Html.DisplayFor(model => model.FirstOrDefault().Order.recDist)
                    @Html.DisplayFor(model => model.FirstOrDefault().Order.recAddress)
                </p>
            </div>
            <div class="row">
                <p class="col-5 text-right">電話</p>
                <p class="col-7"> @Html.DisplayFor(model => model.FirstOrDefault().Order.recPhone)</p>
            </div>
            <div class="row">
                <p class="col-5 text-right">運送方式</p>
                <p class="col-7"> @Html.DisplayFor(model => model.FirstOrDefault().Shipper.shpMethod)</p>
            </div>
            <div class="row">
                <p class="col-5 text-right">付款方式</p>
                <p class="col-7"> @Html.DisplayFor(model => model.FirstOrDefault().Order.PaymentMethod.pmtMethod)</p>
            </div>
        </div>
    </div>

</div>
<div class="col-2">

</div>

@section Script
{
    <script src="~/Scripts/stars.js"></script>

    <script>
        $(`.givestars`).stars({
            value: 1
        });
        function getStar(starCount) {
            var starsArray = ["☆", "☆", "☆", "☆", "☆"];
            var result = "";
            for (var i = 0; i < starCount; i++) {
                starsArray.unshift("★");
            }
            for (var i = 0; i < 5; i++) {
                result += starsArray[i];
            }
            var result = `<span style=" font-size: 30px;color:#E4AD22">${result}</span>`

            return result
        }

        $(`.star`).each((index, element) => {
            $(element).html(
                getStar($(element).attr("Stars"))
            )
        })

        $(`.Button`).on("click", function () {

            let odrid = $(this).next().val();

            $(`input.odrID`).attr("value", odrid);


        });

        $(`.Submit`).on("click", function () {

            let starcount = $(`.givestars>i.selected`).length;
            $(`input.rvwStar`).attr("value", starcount);
        })
    </script>
    <script>
        let Text = "";
        $(`.btn-text`).click(function (evt) {
            let maxlimit = 120;
            let btnText = evt.target.textContent;
            let text = $(`textarea`).val();
            Text = text + btnText;
            $(`textarea`).val(Text);

            if ($(`textarea`).val().length > maxlimit)
                $(`textarea`).val($(`textarea`).val().substring(0, maxlimit))


        })
    </script>

    <script>


        function LimitTextArea(field) {
            let maxlimit = 120;
            if (field.value.length > maxlimit)
                field.value = field.value.substring(0, maxlimit);
        }


    </script>

}

